name: Build and Deploy Next.js App to K3s

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: react-app
      IMAGE_TAG: build-${{ github.run_number }}
      IMAGE_FILE: react-app.tar

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Build Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Save Docker image to tar
        run: docker save $IMAGE_NAME:$IMAGE_TAG -o $IMAGE_FILE

      - name: List workspace
        run: ls -la ${{ github.workspace }}

      - name: Fix permissions on tar
        run: chmod 644 ${{ github.workspace }}/${{ env.IMAGE_FILE }}

      - name: Copy image to VPS
        uses: appleboy/scp-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ${{ env.IMAGE_FILE }}
          target: /home/deployer/frontend

      - name: Deploy on VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            export KUBECONFIG=/etc/rancher/k3s/k3s.yaml

            echo "Importing image into containerd..."
            ctr -n k8s.io images import /home/deployer/frontend/${{ env.IMAGE_FILE }}

            cd /home/deployer/frontend
            echo "Updating deployment to $IMAGE_NAME:${{ env.IMAGE_TAG }}"
            k3s kubectl set image deployment wt-frontend-deployment \
              react-container=$IMAGE_NAME:${{ env.IMAGE_TAG }} -n default \
              || k3s kubectl apply -f deployment.yaml

            kubectl rollout restart deployment wt-frontend-deployment
