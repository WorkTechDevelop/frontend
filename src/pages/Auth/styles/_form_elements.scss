@use 'sass:color'; // Add color module
@use 'variables'; // Import variables
@use 'mixins'; // Import mixins

// --- Form Elements ---
.form-group-wrapper { margin-bottom: mixins.rem(24); } // Adjusted margin (1.5rem)

label {
  display: block;
  margin-bottom: mixins.rem(8); // Adjusted margin (0.5rem)
  font-weight: 600;
  font-size: mixins.rem(12); // Standard size
  color: variables.$text-color;
  text-transform: uppercase; // Back to uppercase for distinction
  letter-spacing: 0.5px;
}

.input-group {
  display: block;
  width: 100%;
  border: 1px solid variables.$border-color;
  border-radius: variables.$border-radius;
  background-color: variables.$white;
  transition: border-color .15s ease-in-out, box-shadow .15s ease-in-out;
  padding: 0;
  box-shadow: none; // Remove element shadow

  &:focus-within {
    border-color: color.adjust(variables.$primary-color, $lightness: 25%);
    outline: 0;
    box-shadow: variables.$focus-shadow;
  }
  &.input-group--password { display: flex; align-items: center; }
}

input[type="email"],
input[type="password"],
input[type="text"] {
  @include mixins.form-control-base; // Use namespaced mixin
  // Override/remove styles handled by mixin or specific to input group
  border: none;
  border-radius: 0;
  background-color: transparent;
  flex-grow: 1;
  &:focus { box-shadow: none; } // Override focus within group
  &:disabled {
    background-color: transparent; // Input specific disabled style
    // Opacity/cursor handled by group
  }
  // Styles for the group when input inside is disabled
  .input-group:has(> &:disabled) { 
      background-color: variables.$background-color;
      cursor: not-allowed; 
      opacity: 0.7; 
      border-color: variables.$border-color; 
      box-shadow: none;
  }
}

// Style for individual field error messages
.error-message {
  color: variables.$error-color; // Use error color for text
  font-size: mixins.rem(12); // Slightly smaller font size
  margin-top: mixins.rem(4); // Add a small top margin
  text-align: left; // Ensure left alignment
}

select.form-select {
  @include mixins.form-control-base; // Use namespaced mixin
  appearance: none;
  background-color: variables.$white; // Keep specific background
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%236c757d' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m2 5 6 6 6-6'/%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: right mixins.rem(12) center; 
  background-size: 16px 12px;
  // Disabled styles handled by mixin
  option[value=""] { color: variables.$secondary-text-color; }
}

.password-toggle-btn {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0 mixins.rem(12); // Standard padding
  background: none;
  border: none;
  border-left: 1px solid variables.$border-color;
  cursor: pointer;
  color: variables.$secondary-text-color;
  font-size: mixins.rem(18);
  flex-shrink: 0;
  align-self: stretch;
  border-radius: 0 variables.$border-radius variables.$border-radius 0;
  transition: color 0.15s ease;
  &:hover { color: variables.$text-color; }
  &:focus { outline: 0; }
  &:focus-visible {
    color: variables.$primary-color;
    // Simple inset shadow for focus
    box-shadow: inset 0 0 0 2px variables.$primary-color;
  }
  &:disabled { cursor: not-allowed; opacity: 0.5; color: variables.$secondary-text-color; }
}

// Error/Success Messages
.message-box {
    margin-bottom: mixins.rem(24); // Adjusted margin (1.5rem)
    padding: mixins.rem(12) mixins.rem(16); // Adjusted padding (0.75rem 1rem)
    border-radius: variables.$border-radius;
    font-size: mixins.rem(13); // Standard font size
    text-align: left;
    border: 1px solid;
    box-shadow: none; // Remove element shadow
}
.message-box.general-error {
    border-color: variables.$error-color;
    color: color.adjust(variables.$error-color, $lightness: -10%);
    background-color: color.adjust(variables.$error-color, $lightness: 35%);
}
.message-box.success-message {
    border-color: variables.$success-color;
    color: color.adjust(variables.$success-color, $lightness: -10%);
    background-color: color.adjust(variables.$success-color, $lightness: 40%);
} 